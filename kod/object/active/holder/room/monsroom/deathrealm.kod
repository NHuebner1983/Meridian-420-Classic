// Meridian 59, Copyright 1994-2012 Andrew Kirmse and Chris Kirmse.
// All rights reserved.
//
// This software is distributed under a license that is described in
// the LICENSE file that accompanies it.
//
// Meridian is a registered trademark.


////////////////////////////////////////////////////////////////////////////////
DeathRealm is MonsterRoom

constants:

   include blakston.khd

resources:

   room_name_DeathRealm ="Death Realm"
   death_realm_no_cast_rsc = "The forces of Qor prevent you from using that magic here. "

classvars:

   vrName = room_name_DeathRealm
   viWeatherZone = WEATHER_ZONE_RAZA
   viWeatherMask = WEATHER_MASK_DEFAULT_NS

properties:

   prBackground = background_chaos_night
   prMapChanges = TRUE
   prMonsters = TRUE
   plGenerators = $
   piMonster_count_max = 40
   piInit_count_min = 5
   piInit_count_max = 10

messages:

   Constructed()
   {
      if prMapChanges = TRUE
      {
         Send(self,@ChangeTexture,#id=10,#new_texture=03203,#flags=CTF_FLOOR);
         Send(self,@ChangeTexture,#id=0,#new_texture=09738,#flags=CTF_FLOOR);
         Send(self,@ChangeTexture,#id=5,#new_texture=09738,#flags=CTF_FLOOR);
         Send(self,@ChangeTexture,#id=15,#new_texture=09738,#flags=CTF_BELOWWALL);
         Send(self,@ChangeTexture,#id=11,#new_texture=03203,#flags=CTF_BELOWWALL);
      }

      if prMonsters = TRUE
      {
         plMonsters = [ [&Skeleton, 10], 
                        [&BatteredSkeleton, 9],
                        [&TuskedSkeleton, 9],
                        [&Mummy, 9], 
                        [&BlackMummy, 9],
                        [&SpectralMummy, 9],
                        [&Zombie, 10], 
                        [&HalfKnight, 10],
                        [&DaemonSkeleton, 5],
                        [&NecromancerTroop, 5],
                        [&CaptainKnight, 5], 
                        [&Thrasher, 4],
                        [&GiantDaemonSkeleton, 2],
                        [&Ghost, 2], 
                        [&DarkAngel, 1],
                        [&BlackDragon, 1]
                         ];
      }

      propagate;
   }
   
   RecalcBackgroundSkyGraphic(iSkyBox=0)
   {
      return;
   }

   GetRoomLight()
   {
      local iLight;

      return iLight=0;
   }

   ReqSpellCast(who = $, oSpell = $, lItems = $)
   {
      if IsClass(oSpell,&Elusion)
         OR IsClass(oSpell,&Rescue)
         OR IsClass(oSpell,&DeathRift)
         OR IsClass(oSpell,&Truce)
         OR IsClass(oSpell,&Jig)
         OR IsClass(oSpell,&NightVision)
         OR IsClass(oSpell,&MartyrsBattleground)
         OR IsClass(oSpell,&Anonymity)
         OR IsClass(oSpell,&ForcesOfLight)
         OR IsClass(oSpell,&QorBane)
         OR IsClass(oSpell,&PortalofLife)
         OR IsClass(oSpell,&FinalRites)
         OR IsClass(oSpell,&BrambleWall)
      {
         // We have to provide the fail message here.
         Send(who,@MsgSendUser,#message_rsc=death_realm_no_cast_rsc,
               #parm1=Send(oSpell,@GetName));

         return FALSE;
      }

      propagate;
   }

end
////////////////////////////////////////////////////////////////////////////////
